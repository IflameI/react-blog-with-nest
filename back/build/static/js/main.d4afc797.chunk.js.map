{
    "version": 3,
    "sources": [
        "redux/types/userTypeRedux.ts",
        "components/Navigation/Header.tsx",
        "redux/actions/user/user.ts",
        "redux/types/postTypeRedux.ts",
        "redux/actions/post/post.ts",
        "redux/actions/index.ts",
        "redux/typeHooks/useActions.ts",
        "redux/typeHooks/useTypedSelector.ts",
        "components/Navigation/HeaderFunctional.tsx",
        "components/helpers/ArticleItem.tsx",
        "components/helpers/Loader.tsx",
        "components/helpers/Modal.tsx",
        "components/helpers/ModalBody.tsx",
        "components/MainContent/MainContent.tsx",
        "components/MainContent/MainContentColumn.tsx",
        "components/Stories/Stories.tsx",
        "components/Stories/TopStories.tsx",
        "components/Stories/LastestStories.tsx",
        "components/Stories/InfoItem.tsx",
        "components/TheBest/TheBest.tsx",
        "pages/auth/login/LoginItem.tsx",
        "pages/auth/login/index.tsx",
        "pages/auth/register/RegisterItem.tsx",
        "pages/auth/register/index.tsx",
        "pages/MainPage.tsx",
        "pages/internalArticle/index.tsx",
        "App.tsx",
        "redux/reducers/user.ts",
        "redux/reducers/post.ts",
        "redux/reducers/index.ts",
        "redux/store.ts",
        "index.tsx"
    ],
    "names": [
        "userActionsType",
        "MainHeader",
        "className",
        "exact",
        "to",
        "postActionsType",
        "fetchUserRegister",
        "postData",
        "a",
        "axios",
        "post",
        "response",
        "status",
        "alert",
        "fetchUserLogin",
        "dispatch",
        "type",
        "SET_IS_AUTH",
        "payload",
        "SET_USER_TOKEN",
        "data",
        "token",
        "window",
        "localStorage",
        "setItem",
        "Bearer",
        "console",
        "warn",
        "setUserLogout",
        "removeItem",
        "fetchThreeArticles",
        "get",
        "SET_MAIN_POSTS",
        "fetchRecentArticles",
        "SET_RECENT_POSTS",
        "fetchPopularArticles",
        "SET_POPULAR_POSTS",
        "log",
        "fetchMostLikesArticles",
        "SET_MOST_LIKES_POSTS",
        "fetchCurrentArticle",
        "id",
        "SET_CURRENT_POST",
        "createPost",
        "SET_CREATE_POST",
        "userActionCreators",
        "postActionCreators",
        "useActions",
        "useDispatch",
        "bindActionCreators",
        "ActionCreators",
        "useTypedSelector",
        "useSelector",
        "HeaderFunctional",
        "useState",
        "modalActive",
        "setModalActive",
        "isAuth",
        "state",
        "user",
        "onClick",
        "active",
        "ArticleItem",
        "heightImg",
        "img",
        "link",
        "suptitle",
        "widthImg",
        "badge",
        "width",
        "height",
        "src",
        "alt",
        "Loader",
        "Modal",
        "children",
        "classNames",
        "e",
        "stopPropagation",
        "ModalBody",
        "useForm",
        "register",
        "handleSubmit",
        "errors",
        "formState",
        "reset",
        "onSubmit",
        "required",
        "title",
        "name",
        "content",
        "image",
        "MainContent",
        "isLoaded",
        "setIsLoaded",
        "mainPosts",
        "useEffect",
        "slice",
        "map",
        "item",
        "index",
        "MainContentColumn",
        "subtitle",
        "smallHeight",
        "style",
        "backgroundImage",
        "Stories",
        "TopStories",
        "popularPosts",
        "LastestStories",
        "recentPosts",
        "length",
        "infoTitle",
        "infoSupTitle",
        "time",
        "updatedAt",
        "InfoItem",
        "transformTime",
        "formatDistanceToNow",
        "Date",
        "addSuffix",
        "TheBest",
        "mostLikesPosts",
        "LoginItem",
        "history",
        "useHistory",
        "push",
        "pattern",
        "value",
        "message",
        "email",
        "minLength",
        "maxLength",
        "password",
        "Login",
        "RegisterItem",
        "Register",
        "MainPage",
        "InternalStory",
        "match",
        "currentPost",
        "currentIdPost",
        "params",
        "article",
        "author",
        "App",
        "Header",
        "path",
        "render",
        "component",
        "Story",
        "initialState",
        "createdAt",
        "likes",
        "views",
        "rootReducer",
        "combineReducers",
        "action",
        "composeEnhancer",
        "__REDUX_DEVTOOLS_EXTENSION_COMPOSE__",
        "compose",
        "store",
        "createStore",
        "applyMiddleware",
        "thunk",
        "ReactDOM",
        "document",
        "getElementById"
    ],
    "mappings": "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",
    "file": "static/js/main.d4afc797.chunk.js",
    "sourcesContent": [
        "export type userDataType = {\r\n  email: string;\r\n  password: string;\r\n};\r\n\r\nexport interface userState {\r\n  data: null | userDataType;\r\n  token: string | null;\r\n  isAuth: boolean;\r\n}\r\n\r\nexport enum userActionsType {\r\n  SET_IS_AUTH = 'SET_IS_AUTH',\r\n  SET_USER_DATA_PENDING = 'SET_USER_DATA_PENDING',\r\n  SET_USER_TOKEN = 'SET_USER_TOKEN',\r\n  SET_USER_LOGOUT = 'SET_USER_LOGOUT',\r\n}\r\n\r\ninterface setUserIsAuthType {\r\n  type: userActionsType.SET_IS_AUTH;\r\n  payload: boolean;\r\n}\r\n\r\ninterface setUserLogoutAuthType {\r\n  type: userActionsType.SET_USER_LOGOUT;\r\n}\r\n\r\ninterface setUserDataPendingType {\r\n  type: userActionsType.SET_USER_DATA_PENDING;\r\n}\r\n\r\ninterface setUserTokenType {\r\n  type: userActionsType.SET_USER_TOKEN;\r\n  payload: string | null;\r\n}\r\n\r\nexport type userActions =\r\n  | setUserDataPendingType\r\n  | setUserIsAuthType\r\n  | setUserTokenType\r\n  | setUserLogoutAuthType;\r\n",
        "import { NavLink } from 'react-router-dom';\r\n\r\nimport { HeaderFunctional } from '..';\r\n\r\nconst MainHeader: React.FC = () => {\r\n  return (\r\n    <header className='header'>\r\n      <div className='header__wrapper'>\r\n        <div className='header__top'>\r\n          <div className='header__left'>\r\n            <NavLink exact to='/'>\r\n              <h1 className='header__title'>Next-blog</h1>\r\n            </NavLink>\r\n          </div>\r\n          <HeaderFunctional />\r\n        </div>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default MainHeader;\r\n",
        "import axios from 'axios';\r\n\r\nimport { Dispatch } from 'redux';\r\nimport { userActions, userActionsType, userDataType } from '../../types/userTypeRedux';\r\n\r\ntype loginUserResponse = {\r\n  data: {\r\n    token: string;\r\n  };\r\n};\r\n\r\nexport const fetchUserRegister = (postData: userDataType) => {\r\n  return async () => {\r\n    try {\r\n      const response = await axios.post('/auth/registration', postData);\r\n      return response;\r\n    } catch (e: any) {\r\n      if (e.response.status === 400) {\r\n        alert('Пользователь с таким email уже существует');\r\n      }\r\n    }\r\n  };\r\n};\r\n\r\nexport const fetchUserLogin = (postData: userDataType) => {\r\n  return async (dispatch: Dispatch<userActions>) => {\r\n    try {\r\n      const response: loginUserResponse = await axios.post('/auth/login', postData);\r\n      dispatch({ type: userActionsType.SET_IS_AUTH, payload: true });\r\n      dispatch({ type: userActionsType.SET_USER_TOKEN, payload: response.data.token });\r\n      window.localStorage.setItem('Bearer', response.data.token);\r\n      if (window.localStorage.Bearer === response.data.token) {\r\n      }\r\n      return response;\r\n    } catch (e) {\r\n      console.warn('Произошла ошибка при авторизации ' + e);\r\n    }\r\n  };\r\n};\r\n\r\nexport const setUserLogout = () => {\r\n  return async (dispatch: Dispatch<userActions>) => {\r\n    dispatch({ type: userActionsType.SET_IS_AUTH, payload: false });\r\n    dispatch({ type: userActionsType.SET_USER_TOKEN, payload: null });\r\n    window.localStorage.removeItem('Bearer');\r\n  };\r\n};\r\n",
        "export type mainPostsType = {\r\n  id: number;\r\n  title: string;\r\n  content: string;\r\n  image: string;\r\n  createdAt: Date;\r\n  updatedAt: string;\r\n};\r\n\r\nexport interface postState {\r\n  mainPosts: mainPostsType[];\r\n  recentPosts: mainPostsType[];\r\n  popularPosts: mainPostsType[];\r\n  mostLikesPosts: mainPostsType[];\r\n  currentPost: {\r\n    id: number | null;\r\n    title: string;\r\n    content: string;\r\n    author: string;\r\n    image: string;\r\n    createdAt: Date | null;\r\n    updatedAt: string | null;\r\n    views: number;\r\n    likes: number;\r\n  };\r\n}\r\n\r\nexport enum postActionsType {\r\n  SET_MAIN_POSTS = 'SET_MAIN_POSTS',\r\n  SET_RECENT_POSTS = 'SET_RECENT_POSTS',\r\n  SET_POPULAR_POSTS = 'SET_POPULAR_POSTS',\r\n  SET_MOST_LIKES_POSTS = 'SET_MOST_LIKES_POSTS',\r\n  SET_CURRENT_POST = 'SET_CURRENT_POST',\r\n  SET_POST_LOADING = 'SET_POST_LOADING',\r\n  SET_CREATE_POST = 'SET_CREATE_POST',\r\n}\r\n\r\ninterface setMainPostsType {\r\n  type: postActionsType.SET_MAIN_POSTS;\r\n  payload: mainPostsType[];\r\n}\r\n\r\ninterface setRecentPostsType {\r\n  type: postActionsType.SET_RECENT_POSTS;\r\n  payload: mainPostsType[];\r\n}\r\n\r\ninterface setPopularPostsType {\r\n  type: postActionsType.SET_POPULAR_POSTS;\r\n  payload: mainPostsType[];\r\n}\r\n\r\ninterface setMostLikesPostsType {\r\n  type: postActionsType.SET_MOST_LIKES_POSTS;\r\n  payload: mainPostsType[];\r\n}\r\n\r\ninterface setCurrentPostType {\r\n  type: postActionsType.SET_CURRENT_POST;\r\n  payload: {\r\n    id: number | null;\r\n    title: string;\r\n    content: string;\r\n    author: string;\r\n    image: string;\r\n    userId: number | null;\r\n    createdAt: Date | null;\r\n    updatedAt: string | null;\r\n    views: number;\r\n    likes: number;\r\n  };\r\n}\r\n\r\ninterface setCreatePostType {\r\n  type: postActionsType.SET_CREATE_POST;\r\n  payload: any;\r\n}\r\n\r\nexport type postActions =\r\n  | setMainPostsType\r\n  | setRecentPostsType\r\n  | setPopularPostsType\r\n  | setMostLikesPostsType\r\n  | setCurrentPostType\r\n  | setCreatePostType;\r\n",
        "import axios from 'axios';\r\n\r\nimport { Dispatch } from 'redux';\r\nimport { postActions, postActionsType } from '../../types/postTypeRedux';\r\n\r\nexport const fetchThreeArticles = () => {\r\n  return async (dispatch: Dispatch<postActions>) => {\r\n    try {\r\n      const response = await axios.get('/posts/threeArticles');\r\n      dispatch({ type: postActionsType.SET_MAIN_POSTS, payload: response.data });\r\n    } catch (e) {\r\n      console.warn('Произошла ошибка при получении 3 главных статей' + e);\r\n    }\r\n  };\r\n};\r\n\r\nexport const fetchRecentArticles = () => {\r\n  return async (dispatch: Dispatch<postActions>) => {\r\n    try {\r\n      const response = await axios.get('/posts/recentArticles');\r\n      dispatch({ type: postActionsType.SET_RECENT_POSTS, payload: response.data });\r\n    } catch (e) {\r\n      console.warn('Произошла ошибка при получении последних статей' + e);\r\n    }\r\n  };\r\n};\r\n\r\nexport const fetchPopularArticles = () => {\r\n  return async (dispatch: Dispatch<postActions>) => {\r\n    try {\r\n      const response = await axios.get('/posts/popularArticles');\r\n      dispatch({ type: postActionsType.SET_POPULAR_POSTS, payload: response.data });\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n};\r\n\r\nexport const fetchMostLikesArticles = () => {\r\n  return async (dispatch: Dispatch<postActions>) => {\r\n    try {\r\n      const response = await axios.get('/posts/mostLikesArticles');\r\n      dispatch({ type: postActionsType.SET_MOST_LIKES_POSTS, payload: response.data });\r\n    } catch (e) {\r\n      console.warn('Произошла ошибка при получении наиболее залайконных статей' + e);\r\n    }\r\n  };\r\n};\r\n\r\nexport const fetchCurrentArticle = (id: number) => {\r\n  return async (dispatch: Dispatch<postActions>) => {\r\n    try {\r\n      const response = await axios.get(`/posts/arcticle/${id}`);\r\n      dispatch({ type: postActionsType.SET_CURRENT_POST, payload: response.data });\r\n    } catch (e) {\r\n      console.warn('Произошла ошибка при получении выбранной статьи' + e);\r\n    }\r\n  };\r\n};\r\n\r\nexport const createPost = (postData: any) => {\r\n  return async (dispatch: Dispatch<postActions>) => {\r\n    try {\r\n      const response = await axios.post('/posts', postData);\r\n      dispatch({ type: postActionsType.SET_CREATE_POST, payload: response.data });\r\n    } catch (e) {\r\n      console.warn('Произошла ошибка при создании статьи' + e);\r\n    }\r\n  };\r\n};\r\n",
        "/* eslint-disable import/no-anonymous-default-export */\r\nimport * as userActionCreators from './user/user';\r\nimport * as postActionCreators from './post/post';\r\n\r\nexport default {\r\n  ...userActionCreators,\r\n  ...postActionCreators,\r\n};\r\n",
        "import { useDispatch } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport ActionCreators from '../actions';\n\nexport const useActions = () => {\n  const dispatch = useDispatch();\n  return bindActionCreators(ActionCreators, dispatch);\n};\n",
        "import { TypedUseSelectorHook, useSelector } from 'react-redux';\nimport { RootState } from '../reducers';\n\nexport const useTypedSelector: TypedUseSelectorHook<RootState> = useSelector;\n",
        "import React, { useState } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Modal, ModalBody } from '..';\r\n\r\nimport { useActions } from '../../redux/typeHooks/useActions';\r\nimport { useTypedSelector } from '../../redux/typeHooks/useTypedSelector';\r\n\r\nconst HeaderFunctional: React.FC = () => {\r\n  const [modalActive, setModalActive] = useState<boolean>(false);\r\n\r\n  const { setUserLogout } = useActions();\r\n  const { isAuth } = useTypedSelector((state) => state.user);\r\n\r\n  return (\r\n    <>\r\n      <div className='header__right'>\r\n        {isAuth && (\r\n          <div className='header__button'>\r\n            <button onClick={() => setModalActive(true)} className='btn'>\r\n              Write article\r\n            </button>\r\n          </div>\r\n        )}\r\n        <div className='header__button'>\r\n          {!isAuth ? (\r\n            <NavLink to='/auth/register'>\r\n              <button className='btn'>Registration / Login</button>\r\n            </NavLink>\r\n          ) : (\r\n            <button onClick={() => setUserLogout()} className='btn'>\r\n              Logout\r\n            </button>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <Modal active={modalActive} setModalActive={setModalActive}>\r\n        <div className='modal__item'>\r\n          <div className='modal__top'>Creation article</div>\r\n          <ModalBody setModalActive={setModalActive} />\r\n        </div>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HeaderFunctional;\r\n",
        "import { NavLink } from 'react-router-dom';\r\n\r\ninterface IArticleItem {\r\n  link: string;\r\n  widthImg: string;\r\n  heightImg: string;\r\n  img: string;\r\n  suptitle: string;\r\n  badge?: string;\r\n}\r\n\r\nconst ArticleItem: React.FC<IArticleItem> = ({\r\n  heightImg,\r\n  img,\r\n  link,\r\n  suptitle,\r\n  widthImg,\r\n  badge,\r\n}) => {\r\n  return (\r\n    <NavLink to={link}>\r\n      <div className='article__item'>\r\n        <div className='article__img'>\r\n          <img width={widthImg} height={heightImg} src={img} alt='news img' />\r\n          {badge && <div className='article__badge'>{badge}</div>}\r\n        </div>\r\n        <div className='article__suptitle'>{suptitle}</div>\r\n      </div>\r\n    </NavLink>\r\n  );\r\n};\r\n\r\nexport default ArticleItem;\r\n",
        "import React from 'react';\n\nconst Loader: React.FC = () => {\n  return (\n    <div className='loader-wrapper'>\n      <div className='lds-spinner'>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n      </div>\n    </div>\n  );\n};\n\nexport default Loader;\n",
        "import classNames from 'classnames';\r\n\r\nimport { Dispatcher } from '../../globalTypes/setActionType';\r\n\r\ninterface IModal {\r\n  active: boolean;\r\n  setModalActive: Dispatcher<boolean>;\r\n}\r\n\r\nconst Modal: React.FC<IModal> = ({ active, setModalActive, children }) => {\r\n  return (\r\n    <div\r\n      className={classNames('modal', {\r\n        'modal active': active,\r\n      })}\r\n      onClick={() => setModalActive(false)}>\r\n      <div\r\n        className={classNames('modal__content', {\r\n          'modal__content active': active,\r\n        })}\r\n        onClick={(e) => e.stopPropagation()}>\r\n        {children}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n",
        "import { SubmitHandler, useForm } from 'react-hook-form';\r\n\r\nimport { Dispatcher } from '../../globalTypes/setActionType';\r\nimport { useActions } from '../../redux/typeHooks/useActions';\r\n\r\ninterface IModalBody {\r\n  setModalActive: Dispatcher<boolean>;\r\n}\r\n\r\ntype Inputs = {\r\n  title: string;\r\n  name: string;\r\n  content: string;\r\n  image: string;\r\n};\r\n\r\nconst ModalBody: React.FC<IModalBody> = ({ setModalActive }) => {\r\n  const { createPost } = useActions();\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n    reset,\r\n  } = useForm<Inputs>();\r\n\r\n  const onSubmit: SubmitHandler<Inputs> = (data) => {\r\n    createPost(data);\r\n    setModalActive(false);\r\n    reset();\r\n  };\r\n  return (\r\n    <div className='modal__body'>\r\n      <form onSubmit={handleSubmit(onSubmit)} className='modal__form'>\r\n        <div className='modal__wrap'>\r\n          <label>Article title</label>\r\n          <input\r\n            {...register('title', {\r\n              required: true,\r\n            })}\r\n          />\r\n          {errors.title && errors.title.type === 'required' && (\r\n            <span className='auth__error'>This field is required</span>\r\n          )}\r\n        </div>\r\n        <div className='modal__wrap'>\r\n          <label>Author's name</label>\r\n          <input\r\n            {...register('name', {\r\n              required: true,\r\n            })}\r\n          />\r\n          {errors.name && errors.name.type === 'required' && (\r\n            <span className='auth__error'>This field is required</span>\r\n          )}\r\n        </div>\r\n        <div className='modal__wrap'>\r\n          <label>The content of the article</label>\r\n          <textarea\r\n            {...register('content', {\r\n              required: true,\r\n            })}\r\n          />\r\n          {errors.content && errors.content.type === 'required' && (\r\n            <span className='auth__error'>This field is required</span>\r\n          )}\r\n        </div>\r\n        <div className='modal__wrap'>\r\n          <label>Link to picture for article</label>\r\n          <input\r\n            {...register('image', {\r\n              required: true,\r\n            })}\r\n          />\r\n          {errors.image && errors.image.type === 'required' && (\r\n            <span className='auth__error'>This field is required</span>\r\n          )}\r\n        </div>\r\n        <div className='modal__footer'>\r\n          <button className='btn'>Submit an article</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ModalBody;\r\n",
        "import { useEffect, useState } from 'react';\r\n\r\nimport { Loader, MainContentColumn } from '..';\r\nimport { useActions } from '../../redux/typeHooks/useActions';\r\nimport { useTypedSelector } from '../../redux/typeHooks/useTypedSelector';\r\nimport { mainPostsType } from '../../redux/types/postTypeRedux';\r\n\r\nconst MainContent: React.FC = () => {\r\n  const [isLoaded, setIsLoaded] = useState<boolean>(false);\r\n  const { mainPosts } = useTypedSelector((state) => state.post);\r\n  const { fetchThreeArticles } = useActions();\r\n\r\n  useEffect(() => {\r\n    fetchThreeArticles();\r\n  }, []);\r\n\r\n  if (mainPosts[0] && isLoaded !== true) {\r\n    setIsLoaded(true);\r\n  }\r\n  return (\r\n    <section className='articlePreview'>\r\n      <div className='articlePreview__row'>\r\n        {isLoaded ? (\r\n          mainPosts\r\n            .slice(0, 3)\r\n            .map((item: mainPostsType, index: number) => (\r\n              <MainContentColumn\r\n                key={`${item.title}__${index}`}\r\n                link={`article/${item.id}`}\r\n                img={item.image}\r\n                title={item.title}\r\n              />\r\n            ))\r\n        ) : (\r\n          <Loader />\r\n        )}\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default MainContent;\r\n",
        "import classNames from 'classnames';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\ninterface IMainContentColumn {\r\n  link: string;\r\n  img: string;\r\n  title: string;\r\n  subtitle?: string;\r\n  smallHeight?: boolean;\r\n}\r\n\r\nconst MainContentColumn: React.FC<IMainContentColumn> = ({\r\n  img,\r\n  link,\r\n  subtitle,\r\n  title,\r\n  smallHeight,\r\n}) => {\r\n  return (\r\n    <div className='articlePreview__column'>\r\n      <NavLink to={link}>\r\n        <div\r\n          style={{\r\n            backgroundImage: `url(${img})`,\r\n          }}\r\n          className={classNames('articlePreview__item', {\r\n            'articlePreview__item--small': smallHeight,\r\n          })}>\r\n          <h2 className='articlePreview__title'>{title}</h2>\r\n          {subtitle && <p className='articlePreview__subtitle'>{subtitle}</p>}\r\n        </div>\r\n      </NavLink>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainContentColumn;\r\n",
        "import { LastestStories, TopStories } from '..';\r\n\r\nconst Stories: React.FC = () => {\r\n  return (\r\n    <section className='stories'>\r\n      <div className='stories__row'>\r\n        <TopStories />\r\n        <LastestStories />\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Stories;\r\n",
        "import { useEffect, useState } from 'react';\r\n\r\nimport { ArticleItem, Loader, MainContentColumn } from '..';\r\nimport { useActions } from '../../redux/typeHooks/useActions';\r\nimport { useTypedSelector } from '../../redux/typeHooks/useTypedSelector';\r\n\r\nconst TopStories: React.FC = () => {\r\n  const [isLoaded, setIsLoaded] = useState<boolean>(false);\r\n\r\n  const { popularPosts } = useTypedSelector((state) => state.post);\r\n  const { fetchPopularArticles } = useActions();\r\n\r\n  useEffect(() => {\r\n    fetchPopularArticles();\r\n  }, []);\r\n  if (popularPosts[0] && isLoaded !== true) {\r\n    setIsLoaded(true);\r\n  }\r\n  return (\r\n    <div className='stories__column'>\r\n      <div className='stories__title'>TOP STORIES</div>\r\n      {isLoaded ? (\r\n        <>\r\n          <div className='stories__wrap'>\r\n            {popularPosts.slice(0, 1).map((item, index: number) => (\r\n              <MainContentColumn\r\n                key={`${item.title}__${index}`}\r\n                link={`article/${item.id}`}\r\n                img={item.image}\r\n                title={item.title}\r\n                subtitle={item.content}\r\n                smallHeight={true}\r\n              />\r\n            ))}\r\n          </div>\r\n          <div className='stories__items'>\r\n            {popularPosts.slice(1, 3).map((item, index: number) => (\r\n              <ArticleItem\r\n                key={`${item.title}__${index}`}\r\n                heightImg='300px'\r\n                img={item.image}\r\n                link={`article/${item.id}`}\r\n                suptitle={item.title}\r\n                widthImg='420px'\r\n              />\r\n            ))}\r\n          </div>\r\n        </>\r\n      ) : (\r\n        <Loader />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TopStories;\r\n",
        "import { useEffect, useState } from 'react';\r\n\r\nimport { InfoItem, Loader } from '..';\r\nimport { useActions } from '../../redux/typeHooks/useActions';\r\nimport { useTypedSelector } from '../../redux/typeHooks/useTypedSelector';\r\n\r\nconst LastestStories: React.FC = () => {\r\n  const [isLoaded, setIsLoaded] = useState<boolean>(false);\r\n  const { recentPosts } = useTypedSelector((state) => state.post);\r\n  const { fetchRecentArticles } = useActions();\r\n\r\n  useEffect(() => {\r\n    fetchRecentArticles();\r\n  }, [recentPosts.length]);\r\n\r\n  if (recentPosts[0] && isLoaded !== true) {\r\n    setIsLoaded(true);\r\n  }\r\n  return (\r\n    <div className='stories__column'>\r\n      <div className='stories__title'>LATEST STORIES</div>\r\n      {isLoaded ? (\r\n        recentPosts\r\n          .slice(0, 8)\r\n          .map((item, index: number) => (\r\n            <InfoItem\r\n              key={`${index}__${item.title}`}\r\n              infoTitle={item.title}\r\n              infoSupTitle={item.content}\r\n              img={item.image}\r\n              time={item.updatedAt}\r\n              link={`article/${item.id}`}\r\n            />\r\n          ))\r\n      ) : (\r\n        <Loader />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LastestStories;\r\n",
        "import { formatDistanceToNow } from 'date-fns';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\ninterface IInfoItem {\r\n  time: string;\r\n  infoTitle: string;\r\n  infoSupTitle: string;\r\n  img: string;\r\n  link: string;\r\n}\r\n\r\nconst InfoItem: React.FC<IInfoItem> = ({ img, infoSupTitle, infoTitle, time, link }) => {\r\n  const transformTime = formatDistanceToNow(new Date(time), { addSuffix: true });\r\n  return (\r\n    <NavLink to={link}>\r\n      <div className='stories__infoItem'>\r\n        <div className='stories__time'>{transformTime}</div>\r\n        <div className='stories__info'>\r\n          <h3 className='stories__infoTitle'>{infoTitle}</h3>\r\n          <p className='stories__infoSupTitle'>{infoSupTitle}</p>\r\n        </div>\r\n        <div className='stories__imgMini'>\r\n          <img width='84px' height='84px' src={img} alt='news' />\r\n        </div>\r\n      </div>\r\n    </NavLink>\r\n  );\r\n};\r\n\r\nexport default InfoItem;\r\n",
        "import { useEffect, useState } from 'react';\r\nimport { ArticleItem, Loader, MainContentColumn } from '..';\r\nimport { useActions } from '../../redux/typeHooks/useActions';\r\nimport { useTypedSelector } from '../../redux/typeHooks/useTypedSelector';\r\n\r\nconst TheBest: React.FC = () => {\r\n  const [isLoaded, setIsLoaded] = useState<boolean>(false);\r\n\r\n  const { mostLikesPosts } = useTypedSelector((state) => state.post);\r\n  const { fetchMostLikesArticles } = useActions();\r\n\r\n  useEffect(() => {\r\n    fetchMostLikesArticles();\r\n  }, []);\r\n  if (mostLikesPosts[0] && isLoaded !== true) {\r\n    setIsLoaded(true);\r\n  }\r\n  return (\r\n    <section className='theBest'>\r\n      <h3 className='theBest__title'>THE BEST</h3>\r\n      <div className='theBest__row'>\r\n        {isLoaded ? (\r\n          <>\r\n            <div className='theBest__column theBest__column--big'>\r\n              {mostLikesPosts.slice(0, 1).map((item, index: number) => (\r\n                <MainContentColumn\r\n                  key={`${item.title}__${index}`}\r\n                  link={`article/${item.id}`}\r\n                  img={item.image}\r\n                  title={item.title}\r\n                  subtitle={item.content}\r\n                  smallHeight={true}\r\n                />\r\n              ))}\r\n            </div>\r\n            {mostLikesPosts.slice(1, 7).map((item, index: number) => (\r\n              <div className='theBest__column' key={`${index}__${item.title}`}>\r\n                <ArticleItem\r\n                  link={`article/${item.id}`}\r\n                  img={item.image}\r\n                  suptitle={item.title}\r\n                  widthImg='420px'\r\n                  heightImg='300px'\r\n                />\r\n              </div>\r\n            ))}\r\n          </>\r\n        ) : (\r\n          <Loader />\r\n        )}\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default TheBest;\r\n",
        "import { NavLink, useHistory } from 'react-router-dom';\r\nimport { useForm, SubmitHandler } from 'react-hook-form';\r\n\r\nimport { useActions } from '../../../redux/typeHooks/useActions';\r\n\r\ntype Inputs = {\r\n  email: string;\r\n  password: string;\r\n};\r\n\r\nconst LoginItem: React.FC = () => {\r\n  const { fetchUserLogin } = useActions();\r\n  const history = useHistory();\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm<Inputs>();\r\n\r\n  const onSubmit: SubmitHandler<Inputs> = (data) => {\r\n    fetchUserLogin(data);\r\n    history.push('/');\r\n  };\r\n  return (\r\n    <div className='register__item'>\r\n      <h1 className='register__title'>Authorization</h1>\r\n      <div className='register__form'>\r\n        <form onSubmit={handleSubmit(onSubmit)} className='register__body'>\r\n          <div className='register__input'>\r\n            <label>Email</label>\r\n            <input\r\n              {...register('email', {\r\n                required: true,\r\n                pattern: {\r\n                  value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\r\n                  message: 'Incorrect email',\r\n                },\r\n              })}\r\n            />\r\n            {errors.email && errors.email.type === 'required' && (\r\n              <span className='auth__error'>This field is required</span>\r\n            )}\r\n            {errors.email && errors.email.type === 'pattern' && (\r\n              <span className='auth__error'>{errors.email.message}</span>\r\n            )}\r\n          </div>\r\n          <div className='register__input'>\r\n            <label>Password</label>\r\n            <input\r\n              type='password'\r\n              {...register('password', { required: true, minLength: 4, maxLength: 16 })}\r\n            />\r\n            {errors.password && errors.password.type === 'required' && (\r\n              <span className='auth__error'>This field is required</span>\r\n            )}\r\n            {errors.password && errors.password.type === 'maxLength' && (\r\n              <span className='auth__error'>16 characters maximum</span>\r\n            )}\r\n            {errors.password && errors.password.type === 'minLength' && (\r\n              <span className='auth__error'>At least 4 characters </span>\r\n            )}\r\n          </div>\r\n          <div className='register__button'>\r\n            <button type='submit' className='btn'>\r\n              Login\r\n            </button>\r\n          </div>\r\n        </form>\r\n        <div className='register__note'>\r\n          Don't have an account?\r\n          <NavLink to='/auth/register'>Register now</NavLink>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginItem;\r\n",
        "import LoginItem from './LoginItem';\r\n\r\nconst Login = () => {\r\n  return (\r\n    <section className='register'>\r\n      <div className='register__wrap'>\r\n        <LoginItem />\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n",
        "import { NavLink, useHistory } from 'react-router-dom';\r\nimport { useForm, SubmitHandler } from 'react-hook-form';\r\n\r\nimport { useActions } from '../../../redux/typeHooks/useActions';\r\n\r\ntype Inputs = {\r\n  email: string;\r\n  password: string;\r\n};\r\n\r\nconst RegisterItem: React.FC = () => {\r\n  const { fetchUserRegister } = useActions();\r\n  const history = useHistory();\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm<Inputs>();\r\n\r\n  const onSubmit: SubmitHandler<Inputs> = (data) => {\r\n    fetchUserRegister(data);\r\n    history.push('/auth/login');\r\n  };\r\n  return (\r\n    <div className='register__item'>\r\n      <h1 className='register__title'>Registration</h1>\r\n      <div className='register__form'>\r\n        <form onSubmit={handleSubmit(onSubmit)} className='register__body'>\r\n          <div className='register__input'>\r\n            <label>Email</label>\r\n            <input\r\n              {...register('email', {\r\n                required: true,\r\n                pattern: {\r\n                  value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\r\n                  message: 'Incorrect email',\r\n                },\r\n              })}\r\n            />\r\n            {errors.email && errors.email.type === 'required' && (\r\n              <span className='auth__error'></span>\r\n            )}\r\n            {errors.email && errors.email.type === 'pattern' && (\r\n              <span className='auth__error'>{errors.email.message}</span>\r\n            )}\r\n          </div>\r\n          <div className='register__input'>\r\n            <label>Password</label>\r\n            <input\r\n              type='password'\r\n              {...register('password', { required: true, minLength: 4, maxLength: 16 })}\r\n            />\r\n            {errors.password && errors.password.type === 'required' && (\r\n              <span className='auth__error'>This field is required</span>\r\n            )}\r\n            {errors.password && errors.password.type === 'maxLength' && (\r\n              <span className='auth__error'>16 characters maximum</span>\r\n            )}\r\n            {errors.password && errors.password.type === 'minLength' && (\r\n              <span className='auth__error'>At least 4 characters </span>\r\n            )}\r\n          </div>\r\n          <div className='register__button'>\r\n            <button type='submit' className='btn'>\r\n              Register\r\n            </button>\r\n          </div>\r\n        </form>\r\n        <div className='register__note'>\r\n          Already have an account?\r\n          <NavLink to='/auth/login'>Sign in to your account</NavLink>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegisterItem;\r\n",
        "import RegisterItem from './RegisterItem';\r\n\r\nconst Register = () => {\r\n  return (\r\n    <section className='register'>\r\n      <div className='register__wrap'>\r\n        <RegisterItem />\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n",
        "import { MainContent, Stories, TheBest } from '../components';\r\n\r\nconst MainPage: React.FC = () => {\r\n  return (\r\n    <>\r\n      <MainContent />\r\n      <Stories />\r\n      <TheBest />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MainPage;\r\n",
        "import { useEffect } from 'react';\r\nimport { useActions } from '../../redux/typeHooks/useActions';\r\nimport { useTypedSelector } from '../../redux/typeHooks/useTypedSelector';\r\n\r\nconst InternalStory: React.FC = ({ match }: any) => {\r\n  const { currentPost } = useTypedSelector((state) => state.post);\r\n  const { fetchCurrentArticle } = useActions();\r\n\r\n  const currentIdPost: number = match.params.article;\r\n  useEffect(() => {\r\n    fetchCurrentArticle(currentIdPost);\r\n  }, []);\r\n\r\n  return (\r\n    <section className='internalStory'>\r\n      <h1 className='internalStory__title'>{currentPost.title}</h1>\r\n      <div className='internalStory__info'>\r\n        <div className='internalStory__views'>\r\n          Author: <span>{currentPost.author}</span>\r\n        </div>\r\n      </div>\r\n      <div className='internalStory__image'>\r\n        <img width='800px' height='600px' src={currentPost.image} alt='img' />\r\n      </div>\r\n      <p className='internalStory__text'>{currentPost.content}</p>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default InternalStory;\r\n",
        "import { Redirect, Route, Switch } from 'react-router';\n\nimport { Header } from './components';\nimport { Login, MainPage, Register, Story } from './pages';\nimport { useTypedSelector } from './redux/typeHooks/useTypedSelector';\n\nfunction App() {\n  const { isAuth } = useTypedSelector((state) => state.user);\n  return (\n    <>\n      <Header />\n      <Switch>\n        <Route exact path='/'>\n          <MainPage />\n        </Route>\n        <Route\n          exact\n          path='/auth/register'\n          render={() => (isAuth ? <Redirect to='/' /> : <Register />)}\n        />\n        <Route exact path='/auth/login' render={() => (isAuth ? <Redirect to='/' /> : <Login />)} />\n        <Route exact path='/article/:article' component={Story} />\n      </Switch>\n    </>\n  );\n}\n\nexport default App;\n",
        "import { userActions, userActionsType, userState } from '../types/userTypeRedux';\n\nconst initialState: userState = {\n  data: null,\n  token: window.localStorage.Bearer,\n  isAuth: window.localStorage.Bearer ? true : false,\n};\n\nexport const user = (state = initialState, action: userActions): userState => {\n  switch (action.type) {\n    case userActionsType.SET_IS_AUTH:\n      return {\n        ...state,\n        isAuth: action.payload,\n      };\n    case userActionsType.SET_USER_TOKEN:\n      return {\n        ...state,\n        token: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n",
        "import { postActions, postActionsType, postState } from '../types/postTypeRedux';\r\n\r\nconst initialState: postState = {\r\n  mainPosts: [],\r\n  recentPosts: [],\r\n  popularPosts: [],\r\n  mostLikesPosts: [],\r\n  currentPost: {\r\n    title: '',\r\n    content: '',\r\n    author: '',\r\n    createdAt: null,\r\n    updatedAt: null,\r\n    id: null,\r\n    image: '',\r\n    likes: 0,\r\n    views: 0,\r\n  },\r\n};\r\n\r\nexport const post = (state = initialState, action: postActions): postState => {\r\n  switch (action.type) {\r\n    case postActionsType.SET_MAIN_POSTS:\r\n      return {\r\n        ...state,\r\n        mainPosts: action.payload,\r\n      };\r\n    case postActionsType.SET_RECENT_POSTS:\r\n      return {\r\n        ...state,\r\n        recentPosts: action.payload,\r\n      };\r\n    case postActionsType.SET_POPULAR_POSTS:\r\n      return {\r\n        ...state,\r\n        popularPosts: action.payload,\r\n      };\r\n    case postActionsType.SET_MOST_LIKES_POSTS:\r\n      return {\r\n        ...state,\r\n        mostLikesPosts: action.payload,\r\n      };\r\n    case postActionsType.SET_CURRENT_POST:\r\n      return {\r\n        ...state,\r\n        currentPost: action.payload,\r\n      };\r\n    case postActionsType.SET_CREATE_POST:\r\n      return {\r\n        ...state,\r\n        recentPosts: [...state.recentPosts, action.payload],\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n",
        "import { user } from './user';\r\nimport { post } from './post';\r\n\r\nimport { combineReducers } from 'redux';\r\n\r\nexport const rootReducer = combineReducers({\r\n  user,\r\n  post,\r\n});\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>;\r\n",
        "import { createStore, compose, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { rootReducer } from './reducers';\r\n\r\ndeclare global {\r\n  interface Window {\r\n    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\r\n  }\r\n}\r\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nexport const store = createStore(rootReducer, composeEnhancer(applyMiddleware(thunk)));\r\n",
        "import ReactDOM from 'react-dom';\nimport App from './App';\nimport './styles/styles.scss';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { store } from './redux/store';\n\nReactDOM.render(\n  <Router>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </Router>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}
